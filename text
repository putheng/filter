Introduction
------------
In this course we're gonna be looking at filtering data within larva in a beautifully clean why so you can see here the oracle and M. point let's just go through this and see what we can do and into the query string of course whether I'm directly accessing something using this through an API I can go ahead and acts the query string and filter based on these results suggest before we return back to this let's go over to the database himself courses tape was set up here and this has a festival a few columns that we could potentially filter by say for example that we could look with a something is free or premium we can check the difficult see we can check the type and of course this can be absolutely anything until now if we had a vote to the subjects table we have three subjects here and I rinse object doubles we've got polymorphic relationship this assigning subjects to each of these and you can see these just here so let's go ahead and start to feel to this is pretty straightforward if I access to premium in the query string course at owning any give us back things not free and we can just further filter this down so for example I could say that the subject is PHP that's going to go ahead and look through all of the subject even if there are lots of them and give you back only results that have PHP and of course we can do the same for things like the difficulty here we could say well we will not to you just pretend tossed a beginner difficulties if we actually go ahead and spell difficulty correctly like side so that we got we just kept up beginner items back so what we can also do is if we assigned in we can use use authentication so you can see here we go I started property which is just a dynamic count tribute is appended to ourselves and we can say well I want to check if well I want only which have results way I have started that particular course or happen started that particular course and I'm signed in over here that's why this is working so we can also do things like order results as well we'll be covering that as well using ordering by 

Use five release of ready nice clean solutions I'm just gonna dig into the hired him to show you how this works so I run here we've got the index method that we've been using to ramrod list of courses we're going had an eager lightning in subjects getting them by the latest that we use in this convenient filter method to pasta filters into hit that we don't need to do this this is actually programmatic the adding specific filters side this is going to give you a really nice level of control if you want to say only allow send filters for different things if we have to the base course filters here you can see the I've removed access from here because we're programmatic the adding IT here and we have all of our filters claw space filters which is pretty important if we just go ahead and I've not the difficulty filter you can see that what we get here is a kind of mapped out database schema so for example if you wanted to be to be passed in for some reason to market to begin in the database then you could of course do that just to demonstrate that the guidance which I've it to be and change difficulty to be that still gives us the same results back so we can do all of this really nicely and if we need a new filter we just crane you Klaas we decide how we want to filter it along with some help the methods and that is pretty much it of course things get a little more advance women looking at using user authentication to determine whether to show results but that is pretty much it so let's go over and start to build out some really nice filtering functionality into our though that can be used with any of our models.